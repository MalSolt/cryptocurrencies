{"version":3,"sources":["api/index.ts","components/ConversionForm.tsx","components/CurrencyTable.tsx","components/Loader.tsx","styles/Global.tsx","App.tsx","index.tsx"],"names":["requestRates","a","fetch","response","json","Wrapper","styled","div","Label","label","Input","input","Select","select","ConversionForm","rates","useState","ruble","setRuble","USD","setSelect","selectedCurrency","setSelectedCurrency","value","onChange","target","Number","placeholder","toFixed","Object","keys","map","e","i","Table","table","CurrencyTable","animationName","keyframes","Div","Loader","Global","createGlobalStyle","App","setRates","ratesRequestSetInterval","useRef","useEffect","then","data","current","window","setInterval","clearInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAAaA,EAAY,uCAAG,4BAAAC,EAAA,sEACHC,MAAM,0CADH,cACpBC,EADoB,yBAEnBA,EAASC,QAFU,2CAAH,qD,OCInBC,EAAUC,IAAOC,IAAV,0GAMPC,EAAQF,IAAOG,MAAV,6GAOLC,EAAQJ,IAAOK,MAAV,sMAWLC,EAASN,IAAOO,OAAV,sMAeCC,EAAiB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAoB,EACzBC,mBAAiB,IADQ,mBAC5CC,EAD4C,KACrCC,EADqC,OAEvBF,mBAAQ,UAAYD,EAAMI,MAFH,mBAE5CN,EAF4C,KAEpCO,EAFoC,OAGHJ,mBAAiB,IAHd,mBAG5CK,EAH4C,KAG1BC,EAH0B,KAKnD,OACE,eAACjB,EAAD,WACE,cAACG,EAAD,6CACA,cAACE,EAAD,CACEa,MAAON,EACPO,SAAU,YAA4B,IAAfD,EAAc,EAAxBE,OAAUF,OACjBG,OAAOH,IAAoB,KAAVA,KACnBL,EAASK,GACTD,EAAoB,MAGxBK,aAAe,GAAKd,GAAWQ,GAAkBO,QAAQ,KAE3D,cAACpB,EAAD,oGACA,cAACI,EAAD,CAAQW,MAAOV,EAAQW,SAAU,gBAAaD,EAAb,EAAGE,OAAUF,MAAb,OAA2BH,EAAUG,IAAtE,SACGM,OAAOC,KAAKf,GAAOgB,KAAI,SAACC,EAAGC,GAC1B,OACE,wBAAoCV,MAAOR,EAAMiB,GAAjD,SACGA,GADH,UAAgBjB,EAAMiB,GAAKA,EAAIC,SAMrC,cAACzB,EAAD,0GACA,cAACE,EAAD,CACEa,MAAOF,EACPG,SAAU,YAA4B,IAAfD,EAAc,EAAxBE,OAAUF,OACjBG,OAAOH,IAAoB,KAAVA,KACnBD,EAAoBC,GACpBL,EAAS,MAGbS,cAAed,GAAUI,GAAOW,QAAQ,SC7E1CvB,EAAUC,IAAOC,IAAV,oGAMP2B,EAAQ5B,IAAO6B,MAAV,mhBAiCEC,EAAgB,SAAC,GAAuB,IAArBrB,EAAoB,EAApBA,MAC9B,OACE,cAAC,EAAD,UACE,eAACmB,EAAD,WACE,gCACE,+BACE,sEACA,+DAGJ,gCACGL,OAAOC,KAAKf,GAAOgB,KAAI,SAACC,EAAGC,GAAJ,OACtB,+BACE,6BAAKD,IACL,6BAAKjB,EAAMiB,GAAGJ,QAAQ,OAFxB,UAAYb,EAAMiB,GAAKA,EAAIC,eCpDjCI,EAAgBC,YAAH,sHASbC,EAAMjC,IAAOC,IAAV,ynBAeQ8B,GAcJG,EAAS,WACpB,OACE,eAACD,EAAD,WACE,wBACA,wBACA,wBACA,4BC5COE,EAASC,YAAH,2NCObrC,EAAUC,IAAOC,IAAV,qJAQAoC,EAAM,WAAO,IAAD,EACG3B,qBADH,mBAChBD,EADgB,KACT6B,EADS,KAEjBC,EAA0BC,mBAWhC,OATAC,qBAAU,WAKR,OAJA/C,IAAegD,MAAK,SAAAC,GAAI,OAAIL,EAASK,EAAKlC,UAC1C8B,EAAwBK,QAAUC,OAAOC,aAAY,WACnDpD,IAAegD,MAAK,SAAAC,GAAI,OAAIL,EAASK,EAAKlC,YACzC,KACI,WACLoC,OAAOE,cAAcR,EAAwBK,YAE9C,KACC,OAACnC,QAAD,IAACA,OAAD,EAACA,EAAOI,KAGV,qCACE,cAACsB,EAAD,IACA,eAAC,EAAD,WACE,cAAC,EAAD,CAAgB1B,MAAOA,IACvB,cAAC,EAAD,CAAeA,MAAOA,UAPJ,cAAC,EAAD,KC1B1BuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1e9903ea.chunk.js","sourcesContent":["export const requestRates = async () => {\r\n  const response = await fetch('https://www.cbr-xml-daily.ru/latest.js')\r\n  return response.json()\r\n}\r\n","import styled from 'styled-components'\r\nimport { useState } from 'react'\r\nimport { TRates } from '../types'\r\n\r\nconst Wrapper = styled.div`\r\n  width: 280px;\r\n  padding: 20px 15px 0px;\r\n  box-shadow: 0 1px 4px #4d4d4d;\r\n`\r\n\r\nconst Label = styled.label`\r\n  display: block;\r\n  margin-bottom: 4px;\r\n  font-size: 14px;\r\n  color: #666666;\r\n`\r\n\r\nconst Input = styled.input`\r\n  width: 250px;\r\n  height: 40px;\r\n  box-shadow: 0 0 5px #b6b6b6;\r\n  border-radius: 3px;\r\n  padding: 10px;\r\n  font-size: 18px;\r\n  color: #242424;\r\n  margin-bottom: 20px;\r\n`\r\n\r\nconst Select = styled.select`\r\n  width: 250px;\r\n  height: 40px;\r\n  box-shadow: 0 0 5px #b6b6b6;\r\n  border-radius: 3px;\r\n  padding: 10px;\r\n  font-size: 18px;\r\n  color: #242424;\r\n  margin-bottom: 20px;\r\n`\r\n\r\ntype TProps = {\r\n  rates: TRates\r\n}\r\n\r\nexport const ConversionForm = ({ rates }: TProps) => {\r\n  const [ruble, setRuble] = useState<string>('')\r\n  const [select, setSelect] = useState<string>(`${rates.USD}`)\r\n  const [selectedCurrency, setSelectedCurrency] = useState<string>('')\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Label>Рубль</Label>\r\n      <Input\r\n        value={ruble}\r\n        onChange={({ target: { value } }) => {\r\n          if (Number(value) || value === '') {\r\n            setRuble(value)\r\n            setSelectedCurrency('')\r\n          }\r\n        }}\r\n        placeholder={((1 / +select) * +selectedCurrency).toFixed(3)}\r\n      />\r\n      <Label>Выберите валюту</Label>\r\n      <Select value={select} onChange={({ target: { value } }) => setSelect(value)}>\r\n        {Object.keys(rates).map((e, i) => {\r\n          return (\r\n            <option key={`${rates[e] + e + i}`} value={rates[e]}>\r\n              {e}\r\n            </option>\r\n          )\r\n        })}\r\n      </Select>\r\n      <Label>Выбранная валюта</Label>\r\n      <Input\r\n        value={selectedCurrency}\r\n        onChange={({ target: { value } }) => {\r\n          if (Number(value) || value === '') {\r\n            setSelectedCurrency(value)\r\n            setRuble('')\r\n          }\r\n        }}\r\n        placeholder={(+select * +ruble).toFixed(3)}\r\n      />\r\n    </Wrapper>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport { TRates } from '../types'\r\n\r\nconst Wrapper = styled.div`\r\n  height: 80vh;\r\n  overflow-y: auto;\r\n  box-shadow: 0 1px 4px #4d4d4d;\r\n`\r\n\r\nconst Table = styled.table`\r\n  table-layout: fixed;\r\n  width: 450px;\r\n  border-collapse: collapse;\r\n  color: #242424;\r\n  tr {\r\n    :nth-child(odd) {\r\n      background-color: #ffffff;\r\n      height: 30px;\r\n    }\r\n    :nth-child(even) {\r\n      background-color: #e7e7e7;\r\n      height: 30px;\r\n    }\r\n  }\r\n  th {\r\n    letter-spacing: 2px;\r\n    text-align: center;\r\n    color: #666666;\r\n    border-bottom: 1px solid #bbbbbb;\r\n    height: 30px;\r\n    font-size: 20px;\r\n  }\r\n  td {\r\n    letter-spacing: 1px;\r\n    text-align: center;\r\n  }\r\n`\r\n\r\ntype TProps = {\r\n  rates: TRates\r\n}\r\n\r\nexport const CurrencyTable = ({ rates }: TProps) => {\r\n  return (\r\n    <Wrapper>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>Валюта</th>\r\n            <th>Курс</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(rates).map((e, i) => (\r\n            <tr key={`${rates[e] + e + i}`}>\r\n              <td>{e}</td>\r\n              <td>{rates[e].toFixed(3)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import styled, { keyframes } from 'styled-components'\r\n\r\nconst animationName = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nconst Div = styled.div`\r\n  margin: 10px;\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 80px;\r\n  height: 80px;\r\n  & div {\r\n    box-sizing: border-box;\r\n    display: block;\r\n    position: absolute;\r\n    width: 64px;\r\n    height: 64px;\r\n    margin: 8px;\r\n    border: 8px solid #7f0c9c;\r\n    border-radius: 50%;\r\n    animation: ${animationName} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\r\n    border-color: #7f0c9c transparent transparent transparent;\r\n  }\r\n  & div:nth-child(1) {\r\n    animation-delay: -0.45s;\r\n  }\r\n  & div:nth-child(2) {\r\n    animation-delay: -0.3s;\r\n  }\r\n  & div:nth-child(3) {\r\n    animation-delay: -0.15s;\r\n  }\r\n`\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <Div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </Div>\r\n  )\r\n}\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport const Global = createGlobalStyle`\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  line-height: 1;\r\n  font-family: 'Roboto', sans-serif;\r\n  border: none;\r\n  outline: none;\r\n}\r\n\r\nbutton {\r\n  cursor: pointer;\r\n}\r\n`\r\n","import { useState, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport { requestRates } from './api'\nimport { ConversionForm } from './components/ConversionForm'\nimport { CurrencyTable } from './components/CurrencyTable'\nimport { Loader } from './components/Loader'\nimport { Global } from './styles/Global'\nimport { TRates } from './types'\n\nconst Wrapper = styled.div`\n  width: 800px;\n  margin: 100px auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n`\n\nexport const App = () => {\n  const [rates, setRates] = useState<TRates>()\n  const ratesRequestSetInterval = useRef<number | undefined>()\n\n  useEffect(() => {\n    requestRates().then(data => setRates(data.rates))\n    ratesRequestSetInterval.current = window.setInterval(() => {\n      requestRates().then(data => setRates(data.rates))\n    }, 10000)\n    return () => {\n      window.clearInterval(ratesRequestSetInterval.current)\n    }\n  }, [])\n  if (!rates?.USD) return <Loader />\n\n  return (\n    <>\n      <Global />\n      <Wrapper>\n        <ConversionForm rates={rates} />\n        <CurrencyTable rates={rates} />\n      </Wrapper>\n    </>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}